<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ys.po.userMapperSql">
	<!-- mybatis 动态SQL -->

	<!-- if+where resultType 此处使用了别名 -->
	<!-- 用 trim 改写 if+where 语句 -->
	<select id="selectUserByUsernameAndSex" resultType="user">
		select * from user
		<!-- <where> <if test='username !=null'> username = #{username} </if> <if 
			test='sex !=null'> and sex = #{sex} </if> </where> -->
		<!-- prefixoverride：去掉第一个and或者是or -->
		<trim prefix="where" prefixOverrides="and | or">
			<if test='username !=null'>
				username = #{username}
			</if>
			<if test='sex !=null'>
				and sex = #{sex}
			</if>
		</trim>
	</select>

	<!-- if+update set 没有判断去除多余逗号功能 -->
	<!-- 用 trim 改写 if+set 语句 -->
	<select id="updateUserById" parameterType="user">
		update user u
		<!-- <set> <if test="username != null and username != ''"> u.sername = 
			#{username}, </if> <if test="sex != null and sex != ''"> u.sex = #{sex} </if> 
			</set> -->

		<!-- suffixoverride：去掉最后一个逗号（也可以是其他的标记，就像是上面前缀中的and一样） -->
		<trim prefix="set" suffixOverrides=",">
			<if test="username != null and username != ''">
				u.username = #{username},
			</if>
			<if test="sex != null and sex != ''">
				u.sex = #{sex},
			</if>
		</trim>
		where id=#{id}
	</select>

	<!-- choose +when + otherwise (sql： ) 只能选择一个作为查询条件 -->
	<select id="selectUserByChoose" resultType="user" parameterType="user">
		select * from user
		<where>
			<choose>
				<when test="username !='' and username != null">
					username=#{username}
				</when>
				<when test="sex!='' and sex!=null">
					and sex=#{sex}
				</when>
				<otherwise>
					and id=#{id}
				</otherwise>
			</choose>
		</where>
	</select>


	<!-- 定义sql片段 在 sql 片段中不要包括 where -->
	<sql id="selectUserByUserNameAndSexSQL">
		<if test="username != null and username != ''">
			AND username = #{username}
		</if>
		<if test="sex != null and sex != ''">
			AND sex = #{sex}
		</if>
	</sql>
	<select id="selectUserByParameters" resultType="user"
		parameterType="user">
		select * from user
		<trim prefix="where" prefixOverrides="and | or">
			<!-- 引用 sql 片段，如果refid 指定的不在本文件中，那么需要在前面加上 namespace -->
			<include refid="selectUserByUserNameAndSexSQL"></include>
			<!-- 在这里还可以引用其他的 sql 片段 -->
		</trim>
	</select>

	<select id="selectUserByListId" parameterType="com.ys.po.UserVo"
		resultType="com.ys.po.User">
		select * from user
		<where>
			<!-- collection:指定输入对象中的集合属性 item:每次遍历生成的对象 open:开始遍历是的拼接字符串 close:结束事拼接的字符串 
				separator:遍历对象之间需要拼接的字符串 select * from user where 1=1 and(id = 1 or id =2 
				or id =3) -->
			<foreach collection="ids" item="id" open="and (" close=")"
				separator="or">
				id=#{id}
			</foreach>
		</where>
	</select>
	
	<select id="selectUserByListId2" parameterType="com.ys.po.UserVo"
		resultType="com.ys.po.User">
		select * from user
		<where>
			<!-- collection:指定输入对象中的集合属性 
				item:每次遍历生成的对象
			 	open:开始遍历是的拼接字符串 close:结束事拼接的字符串 
				separator:遍历对象之间需要拼接的字符串 select * from user where id in(1,2,3) 
			 -->
			<foreach collection="ids" item="id" open="id in (" close=")"
				separator=",">
				#{id}
			</foreach>
		</where>
	</select>

</mapper>